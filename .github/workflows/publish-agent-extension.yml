name: Publish Agent Extension Image

on:
  push:
    branches:
      - main

env:
  NODE_VERSION: 22
  PODMAN_MCP_SERVER_VERSION: 0.0.4
  IMAGE_NAME: quay.io/manusa/podman-desktop-agent-extension
  TAG: latest

jobs:
  node-modules-windows-x64:
    name: 'Node Modules: Windows x64'
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install Node Modules
        run: |
          npm install
          Remove-Item -Path node_modules_windows_x64 -Recurse -Force
          Rename-Item -Path node_modules -NewName node_modules_windows_x64
      - name: Store Node Modules
        uses: actions/upload-artifact@v4
        with:
          name: node_modules_windows_x64
          path: node_modules_windows_x64

  publish-platform-images:
    name: 'Publish: linux-${{ matrix.platform.tag }}'
    strategy:
      fail-fast: true
      matrix:
        platform:
          - runner: ubuntu-latest
            tag: amd64
          - runner: ubuntu-24.04-arm
            tag: arm64
    runs-on: ${{ matrix.platform.runner }}
    needs: node-modules-windows-x64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Podman # Not available in arm64 image
        run: |
          sudo apt-get update
          sudo apt-get install -y podman
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Download Podman MCP Server
        run: |
          ./scripts/download-podman-mcp-server.sh
      - name: Download Node Modules Windows x64
        uses: actions/download-artifact@v4
        with:
          name: node_modules_windows_x64
          path: node_modules_windows_x64
      - name: Install Node Modules
        run: npm install
      - name: Build
        run: npm run build
      - name: Quay Login
        run: |
          echo ${{ secrets.QUAY_PASSWORD }} | docker login quay.io -u ${{ secrets.QUAY_USERNAME }} --password-stdin
      - name: Build Image
        run: |
          podman build \
            --platform "linux/${{ matrix.platform.tag }}" \
            -f Containerfile.extension \
            -t "${{ env.IMAGE_NAME }}:${{ env.TAG }}-linux-${{ matrix.platform.tag }}" \
            .
      - name: Push Image
        run: |
          podman push \
            "${{ env.IMAGE_NAME }}:${{ env.TAG }}-linux-${{ matrix.platform.tag }}"

  publish-manifest:
    name: Publish Manifest
    runs-on: ubuntu-latest
    needs: publish-platform-images
    steps:
      - name: Quay Login
        run: |
          echo ${{ secrets.QUAY_PASSWORD }} | docker login quay.io -u ${{ secrets.QUAY_USERNAME }} --password-stdin
      - name: Create Manifest
        run: |
          podman manifest create \
            "${{ env.IMAGE_NAME }}:${{ env.TAG }}" \
            "${{ env.IMAGE_NAME }}:${{ env.TAG }}-linux-amd64" \
            "${{ env.IMAGE_NAME }}:${{ env.TAG }}-linux-arm64"
      - name: Push Manifest
        run: |
          podman manifest push \
            "${{ env.IMAGE_NAME }}:${{ env.TAG }}"
