@keyframes enter {
  0% {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(
        var(--tw-enter-translatex, 0),
        var(--tw-enter-translatey, 0),
        0
      )
      scale3d(
        var(--tw-enter-scale, 1),
        var(--tw-enter-scale, 1),
        var(--tw-enter-scale, 1)
      )
      rotate(var(--tw-enter-rotate, 0));
  }
}

@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(
        var(--tw-exit-translatex, 0),
        var(--tw-exit-translatey, 0),
        0
      )
      scale3d(
        var(--tw-exit-scale, 1),
        var(--tw-exit-scale, 1),
        var(--tw-exit-scale, 1)
      )
      rotate(var(--tw-exit-rotate, 0));
  }
}

@utility animate-in {
  animation-name: 'enter';
  animation-duration: var(--animation-duration);
  --tw-enter-opacity: initial;
  --tw-enter-scale: initial;
  --tw-enter-rotate: initial;
  --tw-enter-translatex: initial;
  --tw-enter-translatey: initial;
}

@utility animate-out {
  animation-name: 'exit';
  animation-duration: var(--animation-duration);
  --tw-exit-opacity: initial;
  --tw-exit-scale: initial;
  --tw-exit-rotate: initial;
  --tw-exit-translatex: initial;
  --tw-exit-translatey: initial;
}

@utility fade-in-* {
  --tw-enter-opacity: calc(--value(--animation-opacity-*, integer) * 0.01);
}

@utility fade-out-* {
  --tw-exit-opacity: calc(--value(--animation-opacity-*, integer) * 0.01);
}

@utility zoom-in-* {
  --tw-enter-scale: calc(--value(--animation-scale-*, integer) * 0.01);
}

@utility zoom-out-* {
  --tw-exit-scale: calc(--value(--animation-scale-*, integer) * 0.01);
}

@utility slide-in-from-top-* {
  --tw-enter-translate-y: calc(-1 * calc(--value(integer) * var(--animation-translate)));
}

@utility slide-in-from-bottom-* {
  --tw-enter-translate-y: calc(--value(integer) * var(--animation-translate));
}

@utility slide-in-from-left-* {
  --tw-enter-translate-x: calc(-1 * calc(--value(integer) * var(--animation-translate)));
}

@utility slide-in-from-right-* {
  --tw-enter-translate-x: calc(--value(integer) * var(--animation-translate));
}

@utility slide-out-to-top-* {
  --tw-exit-translate-y: calc(-1 * calc(--value(integer) * var(--animation-translate)));
}

@utility slide-out-to-bottom-* {
  --tw-exit-translate-y: calc(--value(integer) * var(--animation-translate));
}

@utility slide-out-to-left-* {
  --tw-exit-translate-x: calc(-1 * calc(--value(integer) * var(--animation-translate)));
}

@utility slide-out-to-right-* {
  --tw-exit-translate-x: calc(--value(integer) * var(--animation-translate));
}

@theme {
  --animation-delay: var(--default-transition-delay);
  --animation-duration: var(--tw-duration, var(--default-transition-duration));
  --animation-duration-0: 0ms;
  --animation-timing-function: --value(--default-transition-timing-function);
  --animation-fill-mode-none: none;
  --animation-fill-mode-forwards: forwards;
  --animation-fill-mode-backwards: backwards;
  --animation-fill-mode-both: both;
  --animation-direction-normal: normal;
  --animation-direction-reverse: reverse;
  --animation-direction-alternate: alternate;
  --animation-direction-alternate-reverse: alternate-reverse;
  --animation-opacity: 0;
  --animation-translate: var(--spacing);
  --animation-scale: 0;
  --animation-rotate: 30deg;
  --animation-repeat-0: 0;
  --animation-repeat-1: 1;
  --animation-repeat-infinite: infinite;
}
